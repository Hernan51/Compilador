
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARITHMETIC_OPERATOR ASSIGNMENT DECREMENT_OPERATOR EQ IDENTIFIER INCREMENT_OPERATOR INTEGER_NUMBER LOGICAL_OPERATOR REAL_NUMBER RELATIONAL_OPERATOR RESERVED_WORD SYMBOLprogram : statement_liststatement_list : statement\n    | statement_list statementstatement : if_statement\n    | while_statement\n    | assignment_statement\n    | expression_statementif_statement : RESERVED_WORD expression RESERVED_WORD statement_list RESERVED_WORD\n    | RESERVED_WORD expression RESERVED_WORD statement_list RESERVED_WORD statement_list RESERVED_WORD\n    while_statement : RESERVED_WORD expression RESERVED_WORD statement_list RESERVED_WORDassignment_statement : IDENTIFIER ASSIGNMENT expressionexpression_statement : expressionexpression : expression ARITHMETIC_OPERATOR term\n    | expression LOGICAL_OPERATOR term\n    | termterm : term ARITHMETIC_OPERATOR factor\n    | factorfactor : INTEGER_NUMBER\n    | REAL_NUMBER\n    | IDENTIFIER\n    | SYMBOL expression SYMBOL'
    
_lr_action_items = {'RESERVED_WORD':([0,2,3,4,5,6,7,9,10,11,12,13,14,16,17,18,24,25,26,27,28,29,30,31,32,33,34,],[8,8,-2,-4,-5,-6,-7,-12,-20,-15,-17,-18,-19,-3,24,-20,8,-13,-14,-11,-16,-21,31,8,24,34,-9,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,],[10,10,-2,-4,-5,-6,-7,18,-12,-20,-15,-17,-18,-19,18,-3,-20,18,18,18,18,10,-13,-14,-11,-16,-21,10,10,-12,10,18,]),'INTEGER_NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,],[13,13,-2,-4,-5,-6,-7,13,-12,-20,-15,-17,-18,-19,13,-3,-20,13,13,13,13,13,-13,-14,-11,-16,-21,13,13,-12,13,13,]),'REAL_NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,],[14,14,-2,-4,-5,-6,-7,14,-12,-20,-15,-17,-18,-19,14,-3,-20,14,14,14,14,14,-13,-14,-11,-16,-21,14,14,-12,14,14,]),'SYMBOL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,],[15,15,-2,-4,-5,-6,-7,15,-12,-20,-15,-17,-18,-19,15,-3,-20,15,15,15,15,29,15,-13,-14,-11,-16,-21,15,15,-12,15,15,]),'$end':([1,2,3,4,5,6,7,9,10,11,12,13,14,16,18,25,26,27,28,29,31,34,],[0,-1,-2,-4,-5,-6,-7,-12,-20,-15,-17,-18,-19,-3,-20,-13,-14,-11,-16,-21,-8,-9,]),'ARITHMETIC_OPERATOR':([9,10,11,12,13,14,17,18,23,25,26,27,28,29,32,],[19,-20,22,-17,-18,-19,19,-20,19,22,22,19,-16,-21,19,]),'LOGICAL_OPERATOR':([9,10,11,12,13,14,17,18,23,25,26,27,28,29,32,],[20,-20,-15,-17,-18,-19,20,-20,20,-13,-14,20,-16,-21,20,]),'ASSIGNMENT':([10,],[21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,24,31,],[2,30,33,]),'statement':([0,2,24,30,31,33,],[3,16,3,16,3,16,]),'if_statement':([0,2,24,30,31,33,],[4,4,4,4,4,4,]),'while_statement':([0,2,24,30,31,33,],[5,5,5,5,5,5,]),'assignment_statement':([0,2,24,30,31,33,],[6,6,6,6,6,6,]),'expression_statement':([0,2,24,30,31,33,],[7,7,7,7,7,7,]),'expression':([0,2,8,15,21,24,30,31,33,34,],[9,9,17,23,27,9,9,32,9,17,]),'term':([0,2,8,15,19,20,21,24,30,31,33,34,],[11,11,11,11,25,26,11,11,11,11,11,11,]),'factor':([0,2,8,15,19,20,21,22,24,30,31,33,34,],[12,12,12,12,12,12,12,28,12,12,12,12,12,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser_s.py',25),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser_s.py',30),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser_s.py',31),
  ('statement -> if_statement','statement',1,'p_statement','parser_s.py',39),
  ('statement -> while_statement','statement',1,'p_statement','parser_s.py',40),
  ('statement -> assignment_statement','statement',1,'p_statement','parser_s.py',41),
  ('statement -> expression_statement','statement',1,'p_statement','parser_s.py',42),
  ('if_statement -> RESERVED_WORD expression RESERVED_WORD statement_list RESERVED_WORD','if_statement',5,'p_if_statement','parser_s.py',47),
  ('if_statement -> RESERVED_WORD expression RESERVED_WORD statement_list RESERVED_WORD statement_list RESERVED_WORD','if_statement',7,'p_if_statement','parser_s.py',48),
  ('while_statement -> RESERVED_WORD expression RESERVED_WORD statement_list RESERVED_WORD','while_statement',5,'p_while_statement','parser_s.py',57),
  ('assignment_statement -> IDENTIFIER ASSIGNMENT expression','assignment_statement',3,'p_assignment_statement','parser_s.py',62),
  ('expression_statement -> expression','expression_statement',1,'p_expression_statement','parser_s.py',67),
  ('expression -> expression ARITHMETIC_OPERATOR term','expression',3,'p_expression','parser_s.py',72),
  ('expression -> expression LOGICAL_OPERATOR term','expression',3,'p_expression','parser_s.py',73),
  ('expression -> term','expression',1,'p_expression','parser_s.py',74),
  ('term -> term ARITHMETIC_OPERATOR factor','term',3,'p_term','parser_s.py',82),
  ('term -> factor','term',1,'p_term','parser_s.py',83),
  ('factor -> INTEGER_NUMBER','factor',1,'p_factor','parser_s.py',91),
  ('factor -> REAL_NUMBER','factor',1,'p_factor','parser_s.py',92),
  ('factor -> IDENTIFIER','factor',1,'p_factor','parser_s.py',93),
  ('factor -> SYMBOL expression SYMBOL','factor',3,'p_factor','parser_s.py',94),
]
